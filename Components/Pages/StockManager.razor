@page "/StockManager"
@rendermode InteractiveServer
@inject IJSRuntime JS
@using System.Linq
@using Microsoft.EntityFrameworkCore
@namespace bookSystemBlazor

<PageTitle>图书进货管理</PageTitle>

<div class="mdui-p-a-2">
    <h3 class="mdui-typo-headline">进货管理</h3>
    <p class="mdui-typo-body-1"><i>已连接到数据库: @db.DBpath</i></p>

    <h4 class="mdui-typo-subheading">查找图书</h4>
    <div class="mdui-row mdui-row-gapless">
        <div class="mdui-col-xs-12 mdui-col-md-6 mdui-p-r-1">
            <div class="mdui-textfield mdui-textfield-floating-label">
                <label class="mdui-textfield-label">按库存数量小于</label>
                <input type="number" @bind="thresholdQuantity" class="mdui-textfield-input" />
            </div>
        </div>
        <div class="mdui-col-xs-12 mdui-col-md-6 mdui-p-l-1">
            <button class="mdui-btn mdui-btn-raised mdui-color-theme mdui-float-right" @onclick="SearchByQuantity">查找</button>
        </div>
    </div>

    <div class="mdui-row mdui-row-gapless mdui-m-t-2">
        <div class="mdui-col-xs-12 mdui-col-md-6 mdui-p-r-1">
            <div class="mdui-textfield mdui-textfield-floating-label">
                <label class="mdui-textfield-label">按图书名称</label>
                <input type="text" @bind="searchName" class="mdui-textfield-input" />
            </div>
        </div>
        <div class="mdui-col-xs-12 mdui-col-md-6 mdui-p-l-1">
            <button class="mdui-btn mdui-btn-raised mdui-color-theme mdui-float-right" @onclick="SearchByName">查找</button>
        </div>
    </div>


    <h6 class="mdui-typo-subheading">查找结果</h6>
    @if (foundBooks.Any())
    {
        <div class="mdui-table-fluid">
            <table class="mdui-table mdui-table-hoverable">
                <thead>
                    <tr>
                        <th>图书ID</th>
                        <th>图书名称</th>
                        <th>图书单价</th>
                        <th>图书库存</th>
                        <th>进货量</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bookInfo in foundBooks)
                    {
                        <tr>
                            <td>@bookInfo.Book.ID</td>
                            <td>@bookInfo.Book.Name</td>
                            <td>@bookInfo.Book.Price</td>
                            <td>@bookInfo.Book.Quantity</td>
                            <td>
                                <div class="mdui-textfield">
                                    <input type="number" min="1" @bind="bookInfo.RestockQuantity" @bind:event="oninput" class="mdui-textfield-input" />
                                </div>
                            </td>
                            <td>
                                <button class="mdui-btn mdui-btn-raised mdui-color-theme-accent" @onclick="() => RestockBook(bookInfo)">确认进货</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="mdui-typo-body-1"><em>没有找到图书!</em></p>
    }
</div>


@code {
    private DSDBcontext db = new(); // 连接到数据库
    private List<BookRestockInfo> foundBooks = new(); // 查找到的图书
    private int thresholdQuantity; // 库存数量阈值
    private string searchName; // 图书名称搜索

    private class BookRestockInfo
    {
        public Book Book { get; set; }
        public int RestockQuantity { get; set; }
    }

    private void SearchByQuantity()
    {
        if (thresholdQuantity > 0)
        {
            var books = db.Books.Where(d => d.Quantity < thresholdQuantity).ToList();
            foundBooks = books.Select(d => new BookRestockInfo { Book = d }).ToList();
        }
    }

    private void SearchByName()
    {
        if (!string.IsNullOrWhiteSpace(searchName))
        {
            var books = db.Books.Where(d => d.Name.Contains(searchName)).ToList();
            foundBooks = books.Select(d => new BookRestockInfo { Book = d }).ToList();
        }
    }

    private async Task RestockBook(BookRestockInfo bookInfo)
    {
        if (bookInfo.RestockQuantity > 0)
        {
            var dbBook = db.Books.Find(bookInfo.Book.ID);
            if (dbBook != null)
            {
                dbBook.Quantity += bookInfo.RestockQuantity;
                db.SaveChanges();
                await JS.InvokeVoidAsync("alert", $"图书 {dbBook.Name} 进货成功，进货量：{bookInfo.RestockQuantity}");
                // 更新找到的图书列表中的库存
                bookInfo.Book.Quantity = dbBook.Quantity;
                bookInfo.RestockQuantity = 0; // 重置进货量
            }
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "请输入有效的进货量");
        }
    }

    protected override void OnInitialized()
    {
        db.Database.EnsureCreated(); // 确保数据库已创建
    }
}