@page "/Book"
@rendermode InteractiveServer
@inject IJSRuntime JS
@using System.Linq
@using Microsoft.EntityFrameworkCore
@namespace librarySage

<PageTitle>图书库存管理页面</PageTitle>

<div class="mdui-p-a-2">
    <h3 class="mdui-typo-headline">图书库存管理</h3>
    <p class="mdui-typo-body-1"><i>已连接到数据库: @db.DBpath</i></p>


    @if (db.Books.Any())
    {
        <h4 class="mdui-typo-subheading">图书列表</h4>
        <div class="mdui-table-fluid">
            <table class="mdui-table mdui-table-hoverable">
                <thead>
                    <tr>
                        <th>图书ID</th>
                        <th>图书名称</th>
                        <th>图书单价</th>
                        <th>图书库存</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Book book in db.Books.OrderBy(d => d.ID).ToList())
                    {
                        <tr>
                            <td>@book.ID</td>
                            <td><input type="text" @bind="book.Name" class="mdui-textfield-input" /></td>
                            <td><input type="text" @bind="book.Price" class="mdui-textfield-input" /></td>
                            <td><input type="text" @bind="book.Quantity" class="mdui-textfield-input" /></td>
                            <td>
                                <button @onclick="()=>UpdateBook(book)" class="mdui-btn mdui-btn-raised mdui-color-theme-accent">更新</button>
                                <button @onclick="()=>DelBook(book)" class="mdui-btn mdui-btn-raised mdui-color-red">删除</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="mdui-typo-body-1"><strong>数据库内图书为空!</strong></p>
    }

    <hr class="mdui-divider" />

    <h4 class="mdui-typo-subheading">添加图书...</h4>
    <div class="mdui-table-fluid">
        <table class="mdui-table">
            <thead>
                <tr>
                    <th>图书名称</th>
                    <th>图书单价</th>
                    <th>图书库存</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input @bind="bookToAdd.Name" class="mdui-textfield-input" /></td>
                    <td><input @bind="bookToAdd.Price" class="mdui-textfield-input" /></td>
                    <td><input @bind="bookToAdd.Quantity" class="mdui-textfield-input" /></td>
                    <td><button @onclick="AddBook" class="mdui-btn mdui-btn-raised mdui-color-theme-accent">添加图书</button></td>
                </tr>
            </tbody>
        </table>
    </div>

    <hr class="mdui-divider" />

    <h4 class="mdui-typo-subheading">图书查找(按名称)</h4>
    <div class="mdui-textfield">
        <input type="text" @bind="bookNameToSearch" class="mdui-textfield-input" />
    </div>
    <button class="mdui-btn mdui-btn-raised mdui-color-theme" @onclick="()=>SearchBook(bookNameToSearch)">查找</button>
    @if (bookSearchResult.Any())
    {
        <div class="mdui-table-fluid">
            <table class="mdui-table mdui-table-hoverable">
                <thead>
                    <tr>
                        <th>图书ID</th>
                        <th>图书名称</th>
                        <th>图书单价</th>
                        <th>图书库存</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Book book in bookSearchResult)
                    {
                        <tr>
                            <td>@book.ID</td>
                            <td><input type="text" @bind="book.Name" class="mdui-textfield-input" /></td>
                            <td><input type="text" @bind="book.Price" class="mdui-textfield-input" /></td>
                            <td><input type="text" @bind="book.Quantity" class="mdui-textfield-input" /></td>
                            <td>
                                <button @onclick="()=>UpdateBook(book)" class="mdui-btn mdui-btn-raised mdui-color-theme-accent">更新</button>
                                <button @onclick="()=>DelBook(book)" class="mdui-btn mdui-btn-raised mdui-color-red">删除</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="mdui-typo-body-1">无结果</p>
    }
</div>

@code {
    private DSDBcontext db = new DSDBcontext(); //连接到数据库
    private Book bookToAdd = new Book() { Price = 0, Quantity = 0 }; //新增图书
    private string bookNameToSearch = string.Empty; //根据药名查找图书
    private List<Book> bookSearchResult = new List<Book>(); //查找结果


    private void AddBook() //新增图书函数
    {
        if (!string.IsNullOrWhiteSpace(bookToAdd.Name)) //判定要添加的图书名称是否为空
        {
            try
            {
                db.Add(bookToAdd);
                db.SaveChanges();
                bookToAdd.Name = string.Empty;
                bookToAdd.Price = 0;
                bookToAdd.Quantity = 0;
            }
            catch (Exception e)
            {
                JS.InvokeVoidAsync("alert", e.Message);
                return;
            }
            JS.InvokeVoidAsync("alert", "图书添加成功");
        }
        StateHasChanged();
    }

    private void UpdateBook(Book book)
    {
        try
        {
            db.Update(book);
            db.SaveChanges();
        }
        catch (Exception e)
        {
            JS.InvokeVoidAsync("alert", e.Message);
            return;
        }

    }

    private void DelBook(Book book)
    {
        try
        {
            db.Remove(book);
            db.SaveChanges();
        }
        catch (Exception e)
        {
            JS.InvokeVoidAsync("alert", e.Message);
            return;
        }
        JS.InvokeVoidAsync("alert", $"图书 {book.Name} 删除成功");
    }

    private void SearchBook(string dragName)
    {
        if (!string.IsNullOrEmpty(dragName)) //判断搜索字符串是否为空
        {
            bookSearchResult = db.Books.Where(d => d.Name.Contains(dragName)).OrderBy(d => d.ID).ToList(); //根据图书名称返回搜索结果
        }
        else
        {
            bookSearchResult = new List<Book>(); //如果为空,返回空列表
        }

    }
    protected override void OnInitialized()
    {
        db.Database.EnsureCreated(); // 确保数据库已创建
    }

}